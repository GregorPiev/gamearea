'use strict';
let gameAppl = angular.module('gameAppl', ['ngRoute', 'ui.router', 'ngSanitize', 'ngFileUpload']);

console.log("%cappl ", "color:blue;");
'use strict';
gameAppl.config(function ($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise('/');
    console.log("%cConfig start", "color:orange");


    $stateProvider
            .state('Home', {
                url: '/',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrHome',
                        templateUrl: 'appl/Home/home.html'
                    }
                }
            })
            .state('Terms', {
                url: '/terms',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrlTerms',
                        templateUrl: 'appl/Terms/terms.html'
                    }
                }
            })
            .state('ContactUs', {
                url: '/contactus',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrlContact',
                        templateUrl: 'appl/Contact/contact.html'
                    }
                }
            })
            .state('Registration', {
                url: '/registration',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrlRegistration',
                        templateUrl: 'appl/Registration/registration.html'
                    }
                }
            })
            .state('Account', {
                url: '/account',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrlAccount',
                        templateUrl: 'appl/Account/account.html'
                    }
                }
            })
            .state('Recommendations', {
                url: '/recommendations',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrlRecomendatins',
                        templateUrl: 'appl/Recomendations/recomendations.html'
                    }
                }
            })
            .state('Demo', {
                url: '/demo',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrlDemo',
                        templateUrl: 'appl/Demo/demo.html'
                    }
                }
            })
            .state('Real', {
                url: '/real',
                views: {
                    stripwinners: {
                        controller: 'ctrlStripwinners',
                        templateUrl: 'appl/Stripwinners/stripwinners.html'
                    },
                    topmenu: {
                        controller: 'ctrlTopmenu',
                        templateUrl: 'appl/Topemenu/topmenu.html'
                    },
                    content: {
                        controller: 'ctrlReal',
                        templateUrl: 'appl/Real/real.html'
                    }
                }
            });
});

gameAppl.run();

angular.element(document).ready(function () {
    console.log("%cDocument ready", "color:brown");
    let $injector = angular.injector(['ng']);
    let $window = $injector.get("$window");
    let counter = $window.localStorage.getItem("counter");
    $window.localStorage.setItem("counter", ++counter);
});
'use strict';
gameAppl.controller('ctrlAccount', function ($scope, $rootScope, DataServiceSQL, $window) {
    $rootScope.$emit('changeMenu', 'account');
    let userObj = JSON.parse($window.localStorage.getItem("logined"));
    $scope.name = userObj.fname;
    $scope.email = userObj.email;
    $scope.phone = userObj.phone;
    $scope.address = userObj.address;
    $scope.city = userObj.city;
    let id_user = userObj.id_user;

    DataServiceSQL.read(8, function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            $scope.page = result.page;
            $scope.title = result.title;
            $scope.content = result.content;
        }
    });

    DataServiceSQL.getUserGames(id_user, function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            console.log("%c Games:" + JSON.stringify(result), "color: green;");
            $('#userGames').dataTable({

                "sDom": 'T<"clear">lfrtip',
                "oTableTools": {
                    "sSwfPath": "lib/tabletools/swf/copy_csv_xls_pdf.swf",
                    "aButtons": [
                        {
                            "sExtends": "pdf",
                            "sButtonText": "Save as PDF"
                        },
                        {
                            "sExtends": "xls",
                            "sButtonText": "Save for Excel"
                        }
                    ]
                },
                "bDestroy": true,
                "bLengthChange": true,
                "bAutoWidth": false,
                "aaData": result,
                "aaSorting": [[1, "desc"]],
                "aoColumns": [
                    {"mData": "id_game", "sTitle": "Game Id"},
                    {"mData": "name", "sTitle": "Game name", "sClass": "columnX center"},
                    {"mData": "shorts", "sTitle": "Short Description", "sClass": "columnX center"},
                    {"mData": "result", "sTitle": "Result", "sClass": "columnX center"},
                    {"mData": "type", "sTitle": "Game Type", "sClass": "columnX center"},
                    {"mData": "img", "sTitle": "Image", "sClass": "columnX center",
                        "mRender": function (data, type, row) {
                            //console.log("%cFullname:" + JSON.stringify(row), "color:green;");
                            return "<img src='upload/" + row.img + "' alt='' title=''>";
                        }
                    },
                ]
            });
        }
    });





});

'use strict';
gameAppl.controller('ctrlContact', function ($scope, $rootScope, DataServiceSQL) {
    $rootScope.$emit('changeMenu', 'contact');
    DataServiceSQL.read(2, function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            $scope.page = result.page;
            $scope.title = result.title;
            $scope.content = result.content;
        }
    });
});

'use strict';
gameAppl.service('DataService', function ($http) {
    this.read = function (url, callback) {
        $http({
            method: "POST",
            url: "../gamearea/data/" + url + ".json",
            headers: {'Content-type': 'application/json'}
        }).then(
                function success(response) {
                    //console.table(response);
                    callback(response);
                },
                function error(err) {
                    console.error(err);
                });
    }

});

gameAppl.service('frService', function ($http) {
    this.read = function (url, callback) {
        $http({
            method: "GET",
            url: "https://gamearea-e98ec.firebaseio.com/" + url + ".json",
            headers: {'Content-type': 'application/json'}
        }).then(
                function success(response) {
                    //console.table(response);
                    callback(response);
                },
                function error(err) {
                    console.error(err);
                });
    }

    this.addUser = function (data, callback) {
        $http({
            method: "POST",
            url: "https://gamearea-e98ec.firebaseio.com/users.json",
            data: JSON.stringify(data),
            headers: {
                'Content-type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            }
        }).then(
                function success(res) {
                    console.log("%cSuccess", "color:blue");
                    console.log(res);
                    callback(res);
                },
                function error(err) {
                    console.log("%cError", "color:#900");
                    console.error(err);
                    callback(err);
                }

        );

    };

    this.login = function login(user, pass, callback) {
        $http({
            Method: 'GET',
            url: 'https://gamearea-e98ec.firebaseio.com/users.json?orderBy="username"&equelTo="' + user + '"',
            headers: {'Content-type': 'application/json'}
        })
                .then(
                        function success(res) {
                            console.log("%cSuccess", "color:blue");
                            console.log(res);
                            callback(res);
                        },
                        function (error) {
                            console.log("%cError", "color:#900");
                            console.error(error);
                            callback(error);
                        }
                );

    }

});

gameAppl.service('DataServiceSQL', function ($http) {
    /**
     *
     * @param {type} idpage
     * @param {type} callback
     * @returns {object} responce
     */
    this.read = function (idpage, callback) {
        let postdata = {
            op: 'page',
            data: {
                idpage: idpage,
                table: "tbcontent"
            }
        };
        $http({
            method: "POST",
            url: "../gamearea/php/api.php",
            data: JSON.stringify(postdata),
            headers: {
                'Content-type': 'application/json',
                'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, DELETE, PUT',
                'Access-Control-Allow-Origin': '*'
            }
        }).then(
                function success(response) {
                    // console.error("%cSuccess Read Page:" + JSON.stringify(response), "color:blue;");
                    callback(response);
                },
                function error(err) {
                    //console.error("%cError Read Page:" + JSON.stringify(resp), "color:#f00;");
                    callback(resp);
                });
    }

    /**
     *
     * @param {type} callback
     * @returns {object} responce
     */
    this.readGamesList = function (home, type, callback) {
        let postdata = {
            op: 'game',
            data: {
                type: type,
                home: home
            }
        };
        $http({
            method: 'POST',
            url: '../gamearea/php/api.php',
            data: JSON.stringify(postdata),
            headers: {'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'POST, GET, OPTION, PUT, DELETE', 'Access-Control-Allow-Origin': '*'}
        })
                .then(function success(resp) {
                    //console.log("%cSuccess Read Games Lists:" + JSON.stringify(resp), "color:blue");
                    callback(resp);
                }, function error(error) {
                    //console.log("%cError Read Games Lists:" + JSON.stringify(error), "color:#f00");
                    callback(error);
                });
    };
    /**
     *
     * @param {type} callback
     * @returns {object} responce
     */
    this.readWinners = function (callback) {
        let postdata = {
            op: 'winners'
        };
        $http({
            method: 'POST',
            url: '../gamearea/php/api.php',
            data: JSON.stringify(postdata),
            headers: {'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'GET, POST, OPTION, PUT, DELTE', 'Access-Control-Allow-Origin': '*'}
        })
                .then(function success(resp) {
                    //console.log("%cSuccess Read Winners:" + JSON.stringify(resp), "color:blue");
                    callback(resp);
                }, function error(error) {
                    //console.log("%cError Read Winners:" + JSON.stringify(error), "color:#f00");
                    callback(error);
                });
    };
    /**
     *
     * @param {type} callback
     * @returns {object} responce
     */
    this.readNews = function (callback) {
        let postdata = {
            op: 'news'
        };
        $http({
            method: 'POST',
            url: '../gamearea/php/api.php',
            data: JSON.stringify(postdata),
            headers: {'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'POST,GET,OPTION,PUT,DELETE', 'Access-Control-Allow-Origin': '*'}
        })
                .then(function success(resp) {
                    //console.log("%cSuccess readNews:" + JSON.stringify(resp), "color:blue");
                    callback(resp);
                }, function error(error) {
                    //console.log("%cError readNews:" + JSON.stringify(resp), "color:#f00");
                    callback(error);
                });

    };
    /**
     *
     * @param {type} callback
     * @returns {object} responce
     */
    this.readRecomendations = function (callback) {
        let postdata = {
            op: 'recomendations'
        };
        $http({
            method: 'POST',
            url: '../gamearea/php/api.php',
            data: JSON.stringify(postdata),
            headers: {'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'POST,GET,OPTION,PUT,DELETE', 'Access-Control-Allow-Origin': '*'}
        })
                .then(function success(resp) {
                    //console.log("%cSuccess readNews:" + JSON.stringify(resp), "color:blue");
                    callback(resp);
                }, function error(error) {
                    //console.log("%cError readNews:" + JSON.stringify(resp), "color:#f00");
                    callback(error);
                });

    };

    /**
     *
     * @param {type} data
     * @param {type} callback
     * @returns {object} responce
     */
    this.addNewUser = function (data, callback) {
        let postdata = {
            op: 'addUser',
            data: data
        };
        $http({
            method: 'POST',
            url: '../gamearea/php/api.php',
            data: JSON.stringify(postdata),
            headers: {'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'PUT,POST,GET,OPTION,DELETE', 'Access-Control-Allow-Original': '*'}
        })
                .then(function (resp) {
                    console.log("%cSuccess addUser:" + JSON.stringify(resp), "color:blue");
                    callback(resp);
                }, function (error) {
                    console.log("%cError addUser:" + JSON.stringify(resp), "color:#f00");
                    callback(error);
                });
    };
    /**
     *
     * @param {type} data
     * @param {type} callback
     * @returns {object} responce
     */
    this.login = function (data, callback) {
        let postdata = {
            op: 'login',
            data: data
        };
        $http({
            method: 'POST',
            url: '../gamearea/php/api.php',
            data: JSON.stringify(postdata),
            headers: {'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'PUT,POST,GET,OPTION,DELETE', 'Access-Control-Allow-Original': '*'}
        })
                .then(function (resp) {
                    callback(resp);
                }, function (error) {
                    callback(error);
                });
    };

    this.getUserData = function (userId, callback) {
        let postdata = {
            op: 'getUser',
            userId: userId
        };
        $http({
            method: "POST",
            url: "../gamearea/php/api.php",
            data: JSON.strigify(postdata),
            headers: {
                'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'POST,GET,PUT,DELETE,OPTION', 'Access-Control-Allow-Original': '*'
            }
        }).then(
                function (res) {
                    callback(res);
                },
                function (err) {
                    callback(err);
                }
        )

    };

    this.getUserGames = function (id_user, callback) {
        let postdata = {
            op: 'userAccount',
            data: {
                userId: id_user,
            }
        };
        $http({
            method: "POST",
            url: "../gamearea/php/api.php",
            data: JSON.stringify(postdata),
            headers: {
                'Content-type': 'application/json', 'Access-Control-Allow-Methods': 'POST,GET,PUT,DELETE,OPTION', 'Access-Control-Allow-Original': '*'
            }
        }).then(
                function (res) {
                    callback(res);
                },
                function (err) {
                    callback(err);
                }
        )

    };

});



'use strict';
gameAppl.controller('ctrlDemo', function ($scope, $rootScope, DataServiceSQL) {
    let home = 0;
    let type = "free";
    $rootScope.$emit('changeMenu', 'demo');

    DataServiceSQL.read(3, function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            $scope.page = result.page;
            $scope.title = result.title;
            $scope.content = result.content;
        }
    });

    DataServiceSQL.readGamesList(home, type, function (data) {
        //console.info("%c Read Home Games Status:" + data.status, "color:orange");
        //console.info("%cReadHomeGames:" + JSON.stringify(data.data.data), "color:green");
        if (data.status == 200) {
            let result = data.data.data;
            $scope.games = result;
        }
    });
});
'use strict';
gameAppl.controller('ctrHome', ['$scope', '$rootScope', 'DataServiceSQL', function ($scope, $rootScope, DataServiceSQL) {
        let home = 1;
        let type = "free";
        DataServiceSQL.read(1, function (data) {
            if (data.status == 200) {
                let result = data.data.data;
                $scope.homecontent = result.content;
            }
        });
        DataServiceSQL.readGamesList(home, type, function (data) {
            //console.info("%c Read Home Games Status:" + data.status, "color:orange");
            //console.info("%cReadHomeGames:" + JSON.stringify(data.data.data), "color:green");
            if (data.status == 200) {
                let result = data.data.data;
                $scope.popgames = result;
            }
        });
        DataServiceSQL.readWinners(function (data) {
            if (data.status == 200) {
                $scope.winners = data.data.data;
            }
        });
        $rootScope.$emit('changeMenu', 'home');


    }]);
'use strict';
gameAppl.controller('ctrlRecomendatins', function ($scope, $rootScope, DataServiceSQL, $window) {
    $rootScope.$emit("changeMenu", 'recomendations');

    DataServiceSQL.read(6, function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            $scope.page = result.page;
            $scope.title = result.title;
            $scope.content = result.content;
        }
    });

    DataServiceSQL.readRecomendations(function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            $window.localStorage.setItem("notes", JSON.stringify(result));
        }


    });


});
'use strict';
gameAppl.controller('ctrlReal', function ($scope, $rootScope, DataServiceSQL) {
    let home = 0;
    let type = "real";
    $rootScope.$emit('changeMenu', 'real');
    DataServiceSQL.read(7, function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            $scope.page = result.page;
            $scope.title = result.title;
            $scope.content = result.content;
        }
    });

    DataServiceSQL.readGamesList(home, type, function (data) {
        //console.info("%c Read Home Games Status:" + data.status, "color:orange");
        //console.info("%cReadHomeGames:" + JSON.stringify(data.data.data), "color:green");
        if (data.status == 200) {
            let result = data.data.data;
            $scope.games = result;
        }
    });
});
'use strict';
gameAppl.controller('ctrlRegistration', function ($scope, DataServiceSQL) {
    DataServiceSQL.read(4, function (data) {
        if (data.status == 200) {
            let result = data.data.data;
            $scope.page = result.page;
            $scope.title = result.title;
            $scope.content = result.content;
        }
    });

});
'use strict';
gameAppl.controller('ctrlStripwinners', function ($scope, DataServiceSQL) {
    DataServiceSQL.readNews(function (data) {
        if (data.status == 200) {
            //console.info("%cNews:" + JSON.stringify(data.data.data), "color:green");
            $scope.news = data.data.data;
        }
    });
});
'use strict';
gameAppl.controller('ctrlTerms', function ($scope, $rootScope, DataServiceSQL) {
    $rootScope.$emit("changeMenu", 'terms');
    DataServiceSQL.read(5, function (data) {
        //console.log("%cArrived result:" + JSON.stringify(data, null), "color: green;");
        if (data.status == 200) {
            let result = data.data.data;
            $scope.page = result.page;
            $scope.title = result.title;
            $scope.content = result.content;
        }
    });
});
'use strict'
gameAppl.controller('ctrlTopmenu', function ($scope, $window, $rootScope) {
    let user_login = null;


    $rootScope.$on("login", function (event, data) {
        console.log("%cLogin", "color:green");
        user_login = JSON.parse($window.localStorage.getItem("logined"));
        angular.element("#anonim").hide();
        $("#logined").show();
        $("#user_values").html(data.fname);
    });

    $(document).ready(function () {
        console.log("%cctrTopmenu Document ready", "color:blue;");

        if ($window.localStorage.getItem("logined") === "undefined" || $window.localStorage.getItem("logined") === null) {
            angular.element("#anonim").show();
            angular.element("#logined").hide();
            $("#user_values").html('');
            $rootScope.$emit("powerLogin", "Default User");
        } else {
            angular.element("#anonim").hide();
            $("#logined").show();
            user_login = JSON.parse($window.localStorage.getItem("logined"));
            $("#user_values").html(user_login.fname);
        }
    });

    $scope.logout = function () {
        angular.element("#anonim").show();
        angular.element("#logined").hide();
        $("#user_values").html('');
        $window.localStorage.removeItem("logined");
        user_login = null;
    };

    $scope.getStatusUser = function () {
        return (user_login === null) ? false : true;
    };


});
'use strict';
gameAppl.controller('ctrlSign', ['$scope', '$rootScope', 'DataServiceSQL', '$window', function ($scope, $rootScope, DataServiceSQL, $window) {
        $scope.resMsg = '';

        $scope.sendVal = function () {
            let client = {fname: '', address: '', city: '', email: '', username: '', password: '', phone: ''};
            let user = {fname: '', address: '', city: '', email: '', username: '', phone: ''};
            client.fname = $scope.client.fname;
            client.city = $scope.client.city;
            client.email = $scope.client.email;
            client.address = $scope.client.address;
            client.username = $scope.client.username;
            client.password = $scope.client.password;
            client.phone = $scope.client.phone;
            user.fname = $scope.client.fname;
            user.city = $scope.client.city;
            user.email = $scope.client.email;
            user.address = $scope.client.address;
            user.username = $scope.client.username;
            user.phone = $scope.client.phone;

            console.log(JSON.stringify(client));

            DataServiceSQL.addNewUser(client, function (result) {
                console.log("%cArrived result:" + JSON.stringify(result), "color: green;");
                if (result.statusText === 'OK') {
                    if (result.data.code === -999 || result.data.code === null) {
                        $scope.resMsg = "Error:" + result.data.msg;
                    } else {
                        $scope.resMsg = "Success";
                        $window.localStorage.setItem("logined", JSON.stringify(user));
                        angular.element("#btnSign").trigger("click");
                        $rootScope.$emit("login", client);
                    }
                } else {
                    $scope.resMsg = "Error:" + result;
                }
            });

        };

        $scope.resultMsg = function () {
            return ($scope.resMsg === '') ? false : true;
        };
    }]);
'use strict';
gameAppl.controller('ctrlLogin', ['$scope', '$rootScope', '$location', 'DataServiceSQL', '$window', function ($scope, $rootScope, $location, DataServiceSQL, $window) {
        let result_send = false;
        $scope.resultMesagge = '';
        console.log("%cctrlogin ", "color:blue;");

        $scope.sendVal = function () {
            let username = (typeof $scope.username === 'undefined') ? 'gregp' : $scope.username;
            let password = (typeof $scope.password === 'undefined') ? 'Gp123456' : $scope.password;
            let loginvalues = {
                'username': username,
                'password': password
            };

            console.log("%cSend values to login:" + JSON.stringify(loginvalues), "color:lightgreen;");

            DataServiceSQL.login(loginvalues, function (result) {
                console.log("%cSend values result:" + JSON.stringify(result), "color:darkgreen;");
                if (result.statusText === 'OK') {
                    if (result.data.code === -999 || result.data.code === null) {
                        $scope.resultMesagge = "Error:" + result.data.msg;
                    } else {
                        $scope.resultMesagge = "Login successed";
                        $window.localStorage.setItem("logined", JSON.stringify(result.data.code));
                        $rootScope.$emit("login", result.data.code);
                    }
                } else {
                    $scope.resultMesagge = "Error:" + result.statusText;
                }
            });

        };

        $scope.resultMsgLogin = function () {
            return ($scope.resultMesagge === '') ? false : true;
        };
        $rootScope.$on("powerLogin", function (event, data) {
            console.log("%cpowerLogin On:" + data, "color:green;");
            $scope.sendVal();
        });

    }]);